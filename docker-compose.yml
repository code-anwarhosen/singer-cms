services:
  cms_postgres:
    image: postgres:15
    container_name: cms_postgres
    environment:
      POSTGRES_USER: cms_user
      POSTGRES_PASSWORD: KsNj237&Y87#T_123
      POSTGRES_DB: cms_db
    volumes:
      - cms_postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - cms

  cms_web:
    container_name: cms_web
    build:
      context: .
      dockerfile: Dockerfile
    image: cms_web:latest
    command: >
      sh -c "
      python manage.py collectstatic --no-input &&
      gunicorn --bind 0.0.0.0:8000 core.wsgi:application
      "
    environment:
      - DEBUG=False
      - SECRET_KEY=django-insecure-q7le0rz@@^rj_+pst2wm3=3beh7_3jow@apsn7wwm!fsp4k1kb
      - ALLOWED_HOSTS=cms.anwarhosen.xyz
      - DATABASE_URL=postgres://cms_user:KsNj237&Y87#T_123@cms_postgres:5432/cms_db
    volumes:
      - ./static:/app/static
      - ./media:/app/media
    depends_on:
      - cms_postgres
    expose:
      - "8000"
    networks:
      - cms

  cms_nginx:
    image: nginx:alpine
    container_name: cms_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./static:/app/static
      - ./media:/app/media
    ports:
      - "8080:80"  # Map host port 8080 to container port 80
    depends_on:
      - cms_web
    restart: unless-stopped
    networks:
      - cms

volumes:
  cms_postgres_data:
    name: cms_postgres_data

networks:
  cms:
    name: cms
    driver: bridge
